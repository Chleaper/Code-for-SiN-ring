function out=sweep_mode(rb_instructor,r_ring,ring_width,thickness,gap,bus_width,n_guess_facotr,lambda)

% finding the mirco-ring optical modes
% Model exported on Oct 19 2021, 19:58 by COMSOL 5.6.0.341.


%% set parameters


n_guess=n_guess_facotr*r_ring;  % unit: 1e-6
%% comsol code


if strcmp(rb_instructor,'bus')
    r_ring=r_ring+(bus_width+ring_width)/2+gap;
    width=bus_width;
else
    width=ring_width;
end

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('C:\Users\Optomachanics\Desktop\Code_for_everything_of_SiN\dispersion_with_matlab');

model.label('sweep_ring_mode.mph');

model.param.set('ringr', sprintf('%d [um]',r_ring));
model.param.set('l',  sprintf('%d [um]',width));
model.param.set('n_guess', num2str(n_guess*1e-6));
model.param.set('hsn',sprintf('%d [nm]',thickness), 'height of SiN');


model.param.set('lam', '1.55[um]');
model.param.set('oh', '16[um]', 'width of physical domain');
model.param.set('ol', '15[um]+l', 'length of physical domain');
model.param.set('pml', '3[um]');
model.param.set('gap_edge', '5[um]');
model.param.set('hclad', '2[um]', 'Air_cladding');
model.param.set('lam_r', '5[nm]');
model.param.set('sup', '40');


model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 2);

model.result.table.create('tbl1', 'Table');

model.component('comp1').geom('geom1').axisymmetric(true);

model.component('comp1').mesh.create('mesh1');

model.component('comp1').geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.component('comp1').geom('geom1').create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('r1').label('Sin');
model.component('comp1').geom('geom1').feature('r1').set('base', 'center');
model.component('comp1').geom('geom1').feature('r1').set('size', {'l' 'hsn'});
model.component('comp1').geom('geom1').create('r2', 'Rectangle');
model.component('comp1').geom('geom1').feature('r2').label('Sin l');
model.component('comp1').geom('geom1').feature('r2').set('pos', {'-ol/2' '-hsn/2'});
model.component('comp1').geom('geom1').feature('r2').set('size', {'(ol-l)/2-gap_edge' 'hsn'});
model.component('comp1').geom('geom1').create('r3', 'Rectangle');
model.component('comp1').geom('geom1').feature('r3').label('SiN r');
model.component('comp1').geom('geom1').feature('r3').set('pos', {'ol/2-((ol-l)/2-gap_edge)' '-hsn/2'});
model.component('comp1').geom('geom1').feature('r3').set('size', {'(ol-l)/2-gap_edge' 'hsn'});
model.component('comp1').geom('geom1').create('r4', 'Rectangle');
model.component('comp1').geom('geom1').feature('r4').set('base', 'center');
model.component('comp1').geom('geom1').feature('r4').set('size', {'ol' 'oh'});
model.component('comp1').geom('geom1').create('r5', 'Rectangle');
model.component('comp1').geom('geom1').feature('r5').set('pos', {'-ol/2' '-hsn/2'});
model.component('comp1').geom('geom1').feature('r5').set('size', {'ol' 'hclad'});
model.component('comp1').geom('geom1').create('r6', 'Rectangle');
model.component('comp1').geom('geom1').feature('r6').active(false);
model.component('comp1').geom('geom1').feature('r6').set('pos', {'-ol/2' '-oh/2'});
model.component('comp1').geom('geom1').feature('r6').set('size', {'ol' 'oh/2-hsn/2'});
model.component('comp1').geom('geom1').create('r11', 'Rectangle');
model.component('comp1').geom('geom1').feature('r11').label('left top SiN');
model.component('comp1').geom('geom1').feature('r11').set('pos', {'-ol/2' '-hsn/2+hclad'});
model.component('comp1').geom('geom1').feature('r11').set('size', {'(ol-l)/2-gap_edge' 'hsn'});
model.component('comp1').geom('geom1').create('r7', 'Rectangle');
model.component('comp1').geom('geom1').feature('r7').set('base', 'center');
model.component('comp1').geom('geom1').feature('r7').set('size', {'ol' 'oh+pml'});
model.component('comp1').geom('geom1').create('r8', 'Rectangle');
model.component('comp1').geom('geom1').feature('r8').set('base', 'center');
model.component('comp1').geom('geom1').feature('r8').set('size', {'gap_edge*2+l' 'oh+pml'});
model.component('comp1').geom('geom1').create('r9', 'Rectangle');
model.component('comp1').geom('geom1').feature('r9').set('base', 'center');
model.component('comp1').geom('geom1').feature('r9').set('size', {'ol' 'oh'});
model.component('comp1').geom('geom1').create('r10', 'Rectangle');
model.component('comp1').geom('geom1').feature('r10').label('Center top SiN');
model.component('comp1').geom('geom1').feature('r10').set('pos', {'0' 'hclad'});
model.component('comp1').geom('geom1').feature('r10').set('base', 'center');
model.component('comp1').geom('geom1').feature('r10').set('size', {'l' 'hsn'});
model.component('comp1').geom('geom1').create('r12', 'Rectangle');
model.component('comp1').geom('geom1').feature('r12').label('Right top SiN');
model.component('comp1').geom('geom1').feature('r12').set('pos', {'ol/2-((ol-l)/2-gap_edge)' '-hsn/2+hclad'});
model.component('comp1').geom('geom1').feature('r12').set('size', {'(ol-l)/2-gap_edge' 'hsn'});
model.component('comp1').geom('geom1').create('r13', 'Rectangle');
model.component('comp1').geom('geom1').feature('r13').label('Rectangle 13');
model.component('comp1').geom('geom1').feature('r13').set('base', 'center');
model.component('comp1').geom('geom1').feature('r13').set('size', {'l+4' '4'});
model.component('comp1').geom('geom1').create('mov1', 'Move');
model.component('comp1').geom('geom1').feature('mov1').set('displx', 'ringr');
model.component('comp1').geom('geom1').feature('mov1').selection('input').set({'r1' 'r10' 'r11' 'r12' 'r13' 'r2' 'r3' 'r4' 'r5' 'r6'  ...
    'r7' 'r8' 'r9'});
model.component('comp1').geom('geom1').run;
model.component('comp1').geom('geom1').run('fin');

model.view.create('view2', 2);

model.component('comp1').material.create('mat7', 'Common');
model.component('comp1').material.create('mat4', 'Common');
model.component('comp1').material.create('mat8', 'Common');
model.component('comp1').material.create('mat5', 'Common');
model.component('comp1').material.create('mat9', 'Common');
model.component('comp1').material('mat7').selection.set([2 9 13 22]);
model.component('comp1').material('mat7').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').func.create('n_interp', 'Interpolation');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').func.create('k_interp', 'Interpolation');
model.component('comp1').material('mat4').selection.set([4 5 6 7 10 11 12 14 15 17 18 19 20 24 25 26 27]);
model.component('comp1').material('mat4').propertyGroup.create('RefractiveIndex', [native2unicode(hex2dec({'62' '98'}), 'unicode')  native2unicode(hex2dec({'5c' '04'}), 'unicode')  native2unicode(hex2dec({'73' '87'}), 'unicode') ]);
model.component('comp1').material('mat8').selection.set([4 5 10 14 17 18 20 24 25]);
model.component('comp1').material('mat8').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').func.create('n_interp', 'Interpolation');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').func.create('k_interp', 'Interpolation');
model.component('comp1').material('mat5').selection.set([1 8 21]);
model.component('comp1').material('mat5').propertyGroup.create('RefractiveIndex', [native2unicode(hex2dec({'62' '98'}), 'unicode')  native2unicode(hex2dec({'5c' '04'}), 'unicode')  native2unicode(hex2dec({'73' '87'}), 'unicode') ]);
model.component('comp1').material('mat9').selection.set([3 16 23]);
model.component('comp1').material('mat9').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func.create('an1', 'Analytic');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func.create('an2', 'Analytic');

model.component('comp1').coordSystem.create('pml1', 'PML');
model.component('comp1').coordSystem('pml1').selection.set([1 2 3 4 5 6 7 8 12 21 22 23 24 25 26 27]);

model.component('comp1').physics.create('ewfd', 'ElectromagneticWavesFrequencyDomain', 'geom1');
model.component('comp1').physics('ewfd').create('sctr1', 'Scattering', 1);
model.component('comp1').physics('ewfd').feature('sctr1').selection.all;

model.component('comp1').mesh('mesh1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').create('size2', 'Size');
model.component('comp1').mesh('mesh1').create('map1', 'Map');
model.component('comp1').mesh('mesh1').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh1').feature('size1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('size1').selection.set([16]);
model.component('comp1').mesh('mesh1').feature('size2').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('size2').selection.set([13 14 15 17 19]);
model.component('comp1').mesh('mesh1').feature('map1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('map1').selection.set([1 2 3 4 5 6 7 8 12 21 22 23 24 25 26 27]);

model.result.table('tbl1').comments([native2unicode(hex2dec({'51' '68'}), 'unicode')  native2unicode(hex2dec({'5c' '40'}), 'unicode')  native2unicode(hex2dec({'8b' 'a1'}), 'unicode')  native2unicode(hex2dec({'7b' '97'}), 'unicode') ' 1']);

model.component('comp1').view('view1').axis.set('xmin', 219.07894897460938);
model.component('comp1').view('view1').axis.set('xmax', 260.92108154296875);
model.component('comp1').view('view1').axis.set('ymin', -11.039923667907715);
model.component('comp1').view('view1').axis.set('ymax', 11.039923667907715);
model.view('view2').label('View 2D 2');
model.view('view2').axis.label('Axis');
model.view('view2').axis.set('xmin', -3.4311110973358154);
model.view('view2').axis.set('xmax', 3.4311110973358154);
model.view('view2').axis.set('viewscaletype', 'automatic');

model.component('comp1').material('mat7').label('SiO2 (Malitson)');
model.component('comp1').material('mat7').propertyGroup('def').label('Basic');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').label('Refractive index');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').info('category').label('Null');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').func('n_interp').label('Interpolation');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').func('n_interp').set('table', {'2.0999999999999997E-7' '1.5383576204905378';  ...
    '2.45E-7' '1.510272436589456';  ...
    '2.8E-7' '1.4941636611187716';  ...
    '3.15E-7' '1.4839008951422648';  ...
    '3.5E-7' '1.476891413495998';  ...
    '3.8499999999999997E-7' '1.4718556531995413';  ...
    '4.1999999999999995E-7' '1.4680936900401065';  ...
    '4.5499999999999993E-7' '1.4651930999599743';  ...
    '4.9E-7' '1.4628966820387057';  ...
    '5.25E-7' '1.4610366660573582';  ...
    '5.599999999999999E-7' '1.4594995356592282';  ...
    '5.949999999999999E-7' '1.4582061049260293';  ...
    '6.3E-7' '1.4570996888768784';  ...
    '6.65E-7' '1.4561387969802702';  ...
    '7.0E-7' '1.4552924662622837';  ...
    '7.35E-7' '1.45453719287602';  ...
    '7.699999999999999E-7' '1.4538548630588606';  ...
    '8.049999999999999E-7' '1.4532313266004242';  ...
    '8.399999999999999E-7' '1.4526553936728075';  ...
    '8.75E-7' '1.4521181167939423';  ...
    '9.099999999999999E-7' '1.4516122686289965';  ...
    '9.45E-7' '1.4511319566976737';  ...
    '9.8E-7' '1.4506723353352597';  ...
    '1.015E-6' '1.4502293877558508';  ...
    '1.05E-6' '1.4497997593262841';  ...
    '1.085E-6' '1.4493806287125588';  ...
    '1.12E-6' '1.4489696073536897';  ...
    '1.155E-6' '1.4485646603469264';  ...
    '1.1899999999999998E-6' '1.4481640436751153';  ...
    '1.2249999999999997E-6' '1.4477662540206953';  ...
    '1.26E-6' '1.4473699883562041';  ...
    '1.2949999999999999E-6' '1.446974111188911';  ...
    '1.33E-6' '1.4465776278425762';  ...
    '1.3649999999999998E-6' '1.4461796625342722';  ...
    '1.4E-6' '1.4457794402848239';  ...
    '1.435E-6' '1.4453762719132304';  ...
    '1.47E-6' '1.4449695415265835';  ...
    '1.5049999999999998E-6' '1.4445586960404744';  ...
    '1.5399999999999999E-6' '1.4441432363602276';  ...
    '1.575E-6' '1.4437227099273546';  ...
    '1.6099999999999998E-6' '1.4432967043935492';  ...
    '1.645E-6' '1.4428648422301078';  ...
    '1.6799999999999998E-6' '1.4424267761167082';  ...
    '1.7149999999999999E-6' '1.4419821849821588';  ...
    '1.75E-6' '1.4415307705926665';  ...
    '1.7849999999999999E-6' '1.4410722546016008';  ...
    '1.82E-6' '1.4406063759896086';  ...
    '1.8549999999999998E-6' '1.4401328888360165';  ...
    '1.89E-6' '1.439651560372282';  ...
    '1.9249999999999998E-6' '1.4391621692763015';  ...
    '1.96E-6' '1.4386645041729973';  ...
    '1.995E-6' '1.4381583623120469';  ...
    '2.03E-6' '1.4376435483981267';  ...
    '2.0649999999999997E-6' '1.4371198735527937';  ...
    '2.1E-6' '1.4365871543902402';  ...
    '2.1350000000000003E-6' '1.4360452121917664';  ...
    '2.17E-6' '1.435493872166012';  ...
    '2.205E-6' '1.4349329627838137';  ...
    '2.2399999999999997E-6' '1.434362315178124';  ...
    '2.275E-6' '1.4337817626007234';  ...
    '2.31E-6' '1.4331911399285864';  ...
    '2.3449999999999996E-6' '1.4325902832137039';  ...
    '2.3799999999999997E-6' '1.4319790292709682';  ...
    '2.4149999999999997E-6' '1.4313572152994267';  ...
    '2.4500000000000003E-6' '1.4307246785327923';  ...
    '2.485E-6' '1.4300812559156133';  ...
    '2.52E-6' '1.4294267838019374';  ...
    '2.555E-6' '1.4287610976736893';  ...
    '2.5899999999999998E-6' '1.4280840318762884';  ...
    '2.625E-6' '1.4273954193693414';  ...
    '2.66E-6' '1.4266950914904597';  ...
    '2.6949999999999996E-6' '1.4259828777304846';  ...
    '2.7299999999999997E-6' '1.4252586055185756';  ...
    '2.765E-6' '1.4245221000157793';  ...
    '2.8E-6' '1.4237731839158354';  ...
    '2.835E-6' '1.423011677252103';  ...
    '2.87E-6' '1.4222373972095803';  ...
    '2.9049999999999997E-6' '1.421450157941106';  ...
    '2.94E-6' '1.4206497703868863';  ...
    '2.975E-6' '1.419836042096581';  ...
    '3.0099999999999996E-6' '1.419008777053232';  ...
    '3.0449999999999996E-6' '1.4181677754983741';  ...
    '3.0799999999999997E-6' '1.4173128337577083';  ...
    '3.115E-6' '1.4164437440667712';  ...
    '3.15E-6' '1.41556029439605';  ...
    '3.185E-6' '1.4146622682750325';  ...
    '3.2199999999999997E-6' '1.4137494446147074';  ...
    '3.2549999999999998E-6' '1.4128215975280431';  ...
    '3.29E-6' '1.4118784961479969';  ...
    '3.325E-6' '1.410919904442614';  ...
    '3.3599999999999996E-6' '1.4099455810267978';  ...
    '3.3949999999999997E-6' '1.4089552789703252';  ...
    '3.43E-6' '1.4079487456017001';  ...
    '3.465E-6' '1.4069257223074338';  ...
    '3.5E-6' '1.4058859443263447';  ...
    '3.535E-6' '1.404829140538468';  ...
    '3.5699999999999997E-6' '1.4037550332481645';  ...
    '3.605E-6' '1.4026633379610098';  ...
    '3.64E-6' '1.4015537631540418';  ...
    '3.6749999999999995E-6' '1.4004260100389325';  ...
    '3.7099999999999996E-6' '1.3992797723176442'});
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').func('n_interp').set('interp', 'piecewisecubic');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').func('k_interp').label('Interpolation 2');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').func('k_interp').set('table', {'2.0999999999999997E-7' '0.0'; '1.96E-6' '0.0'; '3.7099999999999996E-6' '0.0'});
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').func('k_interp').set('interp', 'piecewisecubic');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').set('n', {'n_interp(1[1/m]*c_const/freq)' '0' '0' '0' 'n_interp(1[1/m]*c_const/freq)' '0' '0' '0' 'n_interp(1[1/m]*c_const/freq)'});
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').set('ki', {'k_interp(1[1/m]*c_const/freq)' '0' '0' '0' 'k_interp(1[1/m]*c_const/freq)' '0' '0' '0' 'k_interp(1[1/m]*c_const/freq)'});
model.component('comp1').material('mat7').propertyGroup('RefractiveIndex').addInput('frequency');
model.component('comp1').material('mat4').label('air');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat4').propertyGroup('RefractiveIndex').set('ki', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.component('comp1').material('mat8').active(false);
model.component('comp1').material('mat8').label('SiO2 (Malitson, Boosted)');
model.component('comp1').material('mat8').propertyGroup('def').label('Basic');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').label('Refractive index');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').info('category').label('Null');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').func('n_interp').label('Interpolation');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').func('n_interp').set('table', {'2.0999999999999997E-7' '1.5383576204905378';  ...
    '2.45E-7' '1.510272436589456';  ...
    '2.8E-7' '1.4941636611187716';  ...
    '3.15E-7' '1.4839008951422648';  ...
    '3.5E-7' '1.476891413495998';  ...
    '3.8499999999999997E-7' '1.4718556531995413';  ...
    '4.1999999999999995E-7' '1.4680936900401065';  ...
    '4.5499999999999993E-7' '1.4651930999599743';  ...
    '4.9E-7' '1.4628966820387057';  ...
    '5.25E-7' '1.4610366660573582';  ...
    '5.599999999999999E-7' '1.4594995356592282';  ...
    '5.949999999999999E-7' '1.4582061049260293';  ...
    '6.3E-7' '1.4570996888768784';  ...
    '6.65E-7' '1.4561387969802702';  ...
    '7.0E-7' '1.4552924662622837';  ...
    '7.35E-7' '1.45453719287602';  ...
    '7.699999999999999E-7' '1.4538548630588606';  ...
    '8.049999999999999E-7' '1.4532313266004242';  ...
    '8.399999999999999E-7' '1.4526553936728075';  ...
    '8.75E-7' '1.4521181167939423';  ...
    '9.099999999999999E-7' '1.4516122686289965';  ...
    '9.45E-7' '1.4511319566976737';  ...
    '9.8E-7' '1.4506723353352597';  ...
    '1.015E-6' '1.4502293877558508';  ...
    '1.05E-6' '1.4497997593262841';  ...
    '1.085E-6' '1.4493806287125588';  ...
    '1.12E-6' '1.4489696073536897';  ...
    '1.155E-6' '1.4485646603469264';  ...
    '1.1899999999999998E-6' '1.4481640436751153';  ...
    '1.2249999999999997E-6' '1.4477662540206953';  ...
    '1.26E-6' '1.4473699883562041';  ...
    '1.2949999999999999E-6' '1.446974111188911';  ...
    '1.33E-6' '1.4465776278425762';  ...
    '1.3649999999999998E-6' '1.4461796625342722';  ...
    '1.4E-6' '1.4457794402848239';  ...
    '1.435E-6' '1.4453762719132304';  ...
    '1.47E-6' '1.4449695415265835';  ...
    '1.5049999999999998E-6' '1.4445586960404744';  ...
    '1.5399999999999999E-6' '1.4441432363602276';  ...
    '1.575E-6' '1.4437227099273546';  ...
    '1.6099999999999998E-6' '1.4432967043935492';  ...
    '1.645E-6' '1.4428648422301078';  ...
    '1.6799999999999998E-6' '1.4424267761167082';  ...
    '1.7149999999999999E-6' '1.4419821849821588';  ...
    '1.75E-6' '1.4415307705926665';  ...
    '1.7849999999999999E-6' '1.4410722546016008';  ...
    '1.82E-6' '1.4406063759896086';  ...
    '1.8549999999999998E-6' '1.4401328888360165';  ...
    '1.89E-6' '1.439651560372282';  ...
    '1.9249999999999998E-6' '1.4391621692763015';  ...
    '1.96E-6' '1.4386645041729973';  ...
    '1.995E-6' '1.4381583623120469';  ...
    '2.03E-6' '1.4376435483981267';  ...
    '2.0649999999999997E-6' '1.4371198735527937';  ...
    '2.1E-6' '1.4365871543902402';  ...
    '2.1350000000000003E-6' '1.4360452121917664';  ...
    '2.17E-6' '1.435493872166012';  ...
    '2.205E-6' '1.4349329627838137';  ...
    '2.2399999999999997E-6' '1.434362315178124';  ...
    '2.275E-6' '1.4337817626007234';  ...
    '2.31E-6' '1.4331911399285864';  ...
    '2.3449999999999996E-6' '1.4325902832137039';  ...
    '2.3799999999999997E-6' '1.4319790292709682';  ...
    '2.4149999999999997E-6' '1.4313572152994267';  ...
    '2.4500000000000003E-6' '1.4307246785327923';  ...
    '2.485E-6' '1.4300812559156133';  ...
    '2.52E-6' '1.4294267838019374';  ...
    '2.555E-6' '1.4287610976736893';  ...
    '2.5899999999999998E-6' '1.4280840318762884';  ...
    '2.625E-6' '1.4273954193693414';  ...
    '2.66E-6' '1.4266950914904597';  ...
    '2.6949999999999996E-6' '1.4259828777304846';  ...
    '2.7299999999999997E-6' '1.4252586055185756';  ...
    '2.765E-6' '1.4245221000157793';  ...
    '2.8E-6' '1.4237731839158354';  ...
    '2.835E-6' '1.423011677252103';  ...
    '2.87E-6' '1.4222373972095803';  ...
    '2.9049999999999997E-6' '1.421450157941106';  ...
    '2.94E-6' '1.4206497703868863';  ...
    '2.975E-6' '1.419836042096581';  ...
    '3.0099999999999996E-6' '1.419008777053232';  ...
    '3.0449999999999996E-6' '1.4181677754983741';  ...
    '3.0799999999999997E-6' '1.4173128337577083';  ...
    '3.115E-6' '1.4164437440667712';  ...
    '3.15E-6' '1.41556029439605';  ...
    '3.185E-6' '1.4146622682750325';  ...
    '3.2199999999999997E-6' '1.4137494446147074';  ...
    '3.2549999999999998E-6' '1.4128215975280431';  ...
    '3.29E-6' '1.4118784961479969';  ...
    '3.325E-6' '1.410919904442614';  ...
    '3.3599999999999996E-6' '1.4099455810267978';  ...
    '3.3949999999999997E-6' '1.4089552789703252';  ...
    '3.43E-6' '1.4079487456017001';  ...
    '3.465E-6' '1.4069257223074338';  ...
    '3.5E-6' '1.4058859443263447';  ...
    '3.535E-6' '1.404829140538468';  ...
    '3.5699999999999997E-6' '1.4037550332481645';  ...
    '3.605E-6' '1.4026633379610098';  ...
    '3.64E-6' '1.4015537631540418';  ...
    '3.6749999999999995E-6' '1.4004260100389325';  ...
    '3.7099999999999996E-6' '1.3992797723176442'});
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').func('n_interp').set('interp', 'piecewisecubic');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').func('k_interp').label('Interpolation 2');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').func('k_interp').set('table', {'2.0999999999999997E-7' '0.0'; '1.96E-6' '0.0'; '3.7099999999999996E-6' '0.0'});
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').func('k_interp').set('interp', 'piecewisecubic');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').set('n', {'n_interp(1[1/m]*c_const/freq)+0.0035' '0' '0' '0' 'n_interp(1[1/m]*c_const/freq)+0.0035' '0' '0' '0' 'n_interp(1[1/m]*c_const/freq)+0.0035'});
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').set('ki', {'k_interp(1[1/m]*c_const/freq)' '0' '0' '0' 'k_interp(1[1/m]*c_const/freq)' '0' '0' '0' 'k_interp(1[1/m]*c_const/freq)'});
model.component('comp1').material('mat8').propertyGroup('RefractiveIndex').addInput('frequency');
model.component('comp1').material('mat5').label('Silicon');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('n', {'3.45' '0' '0' '0' '3.45' '0' '0' '0' '3.45'});
model.component('comp1').material('mat5').propertyGroup('RefractiveIndex').set('ki', {'3' '0' '0' '0' '3' '0' '0' '0' '3'});
model.component('comp1').material('mat9').label('Si3N4 Rogue Valley LPCVD');
model.component('comp1').material('mat9').propertyGroup('def').label('Basic');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').label('Refractive index');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').info('category').label('Null');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an1').label('Sellmeier Eq');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an1').set('funcname', 'sellmeier');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an1').set('expr', 'sqrt(E + (A*lambda^2)/(lambda^2 - C^2) - I*lambda^2)');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an1').set('args', {'lambda' 'E' 'A' 'C' 'I'});
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an1').set('plotargs', {'lambda' '0' '1';  ...
    'E' '0' '1';  ...
    'A' '0' '1';  ...
    'C' '0' '1';  ...
    'I' '0' '1'});
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an2').label('Rogue Valley Nitride');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an2').set('funcname', 'rogue');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an2').set('expr', 'sellmeier(lambda, 0, 3.875, 0.117, 0.05881)');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an2').set('args', {'lambda'});
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an2').set('argunit', 'um');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an2').set('fununit', '1');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').func('an2').set('plotargs', {'lambda' '0.4[um]' '2.0[um]'});
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('n', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('ki', '');
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('n', {'rogue(c_const/freq)' '0' '0' '0' 'rogue(c_const/freq)' '0' '0' '0' 'rogue(c_const/freq)'});
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').set('ki', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.component('comp1').material('mat9').propertyGroup('RefractiveIndex').addInput('frequency');

model.component('comp1').coordSystem('pml1').set('ScalingType', 'Cylindrical');

model.component('comp1').physics('ewfd').prop('outofplanewavenumber').set('mFloquet', 5);
model.component('comp1').physics('ewfd').feature('wee1').set('minput_frequency_src', 'userdef');
model.component('comp1').physics('ewfd').feature('wee1').set('minput_frequency', 'root.freq');
model.component('comp1').physics('ewfd').feature('sctr1').set('WaveType', 'CylindricalWave');

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 3);
model.component('comp1').mesh('mesh1').feature('size').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('size').set('hmax', 'lam/10');
model.component('comp1').mesh('mesh1').feature('size').set('hmin', 0.001);
model.component('comp1').mesh('mesh1').feature('size').set('hgrad', 1.2);
model.component('comp1').mesh('mesh1').feature('size1').set('hauto', 3);
model.component('comp1').mesh('mesh1').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('size1').set('hmax', 'l/80');
model.component('comp1').mesh('mesh1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('size1').set('hmin', '0.0001');
model.component('comp1').mesh('mesh1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('size2').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('size2').set('hmax', 'l/60');
model.component('comp1').mesh('mesh1').feature('size2').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('size2').set('hmin', 0.009);
model.component('comp1').mesh('mesh1').feature('size2').set('hminactive', false);
model.component('comp1').mesh('mesh1').feature('map1').set('smoothmaxiter', 8);
model.component('comp1').mesh('mesh1').feature('map1').set('smoothmaxdepth', 8);
model.component('comp1').mesh('mesh1').feature('ftri1').set('smoothmaxiter', 8);
model.component('comp1').mesh('mesh1').feature('ftri1').set('smoothmaxdepth', 8);
model.component('comp1').mesh('mesh1').run;

model.study.create('std3');
model.study('std3').create('mode', 'ModeAnalysis');

model.sol.create('sol1');
model.sol('sol1').study('std3');
model.sol('sol1').attach('std3');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('e1', 'Eigenvalue');
model.sol('sol1').feature('e1').create('d1', 'Direct');

model.study('std3').label('study for single mode');
model.study('std3').feature('mode').set('modeFreq', 'c_const/lam');
model.study('std3').feature('mode').set('neigsactive', true);
model.study('std3').feature('mode').set('neigs', 1);
model.study('std3').feature('mode').set('shift', 'n_guess');
model.study('std3').feature('mode').set('ngen', 1);
model.study('std3').feature('mode').set('ngenactive', false);

model.sol('sol1').attach('std3');
model.sol('sol1').feature('st1').label([native2unicode(hex2dec({'7f' '16'}), 'unicode')  native2unicode(hex2dec({'8b' 'd1'}), 'unicode')  native2unicode(hex2dec({'65' 'b9'}), 'unicode')  native2unicode(hex2dec({'7a' '0b'}), 'unicode') ': ' native2unicode(hex2dec({'6a' '21'}), 'unicode')  native2unicode(hex2dec({'5f' '0f'}), 'unicode')  native2unicode(hex2dec({'52' '06'}), 'unicode')  native2unicode(hex2dec({'67' '90'}), 'unicode') ]);
model.sol('sol1').feature('v1').label([native2unicode(hex2dec({'56' 'e0'}), 'unicode')  native2unicode(hex2dec({'53' 'd8'}), 'unicode')  native2unicode(hex2dec({'91' 'cf'}), 'unicode') ' 1.1']);
model.sol('sol1').feature('e1').label([native2unicode(hex2dec({'72' '79'}), 'unicode')  native2unicode(hex2dec({'5f' '81'}), 'unicode')  native2unicode(hex2dec({'50' '3c'}), 'unicode')  native2unicode(hex2dec({'6c' '42'}), 'unicode')  native2unicode(hex2dec({'89' 'e3'}), 'unicode')  native2unicode(hex2dec({'56' '68'}), 'unicode') ' 1.1']);
model.sol('sol1').feature('e1').set('transform', 'effective_mode_index');
model.sol('sol1').feature('e1').set('neigs', 1);
model.sol('sol1').feature('e1').set('shift', 'n_guess');
model.sol('sol1').feature('e1').set('eigref', 'n_guess');
model.sol('sol1').feature('e1').feature('dDef').label([native2unicode(hex2dec({'76' 'f4'}), 'unicode')  native2unicode(hex2dec({'63' 'a5'}), 'unicode') ' 2']);
model.sol('sol1').feature('e1').feature('aDef').label([native2unicode(hex2dec({'9a' 'd8'}), 'unicode')  native2unicode(hex2dec({'7e' 'a7'}), 'unicode') ' 1']);
model.sol('sol1').feature('e1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('e1').feature('d1').label([native2unicode(hex2dec({'5e' 'fa'}), 'unicode')  native2unicode(hex2dec({'8b' 'ae'}), 'unicode')  native2unicode(hex2dec({'76' '84'}), 'unicode')  native2unicode(hex2dec({'76' 'f4'}), 'unicode')  native2unicode(hex2dec({'63' 'a5'}), 'unicode')  native2unicode(hex2dec({'6c' '42'}), 'unicode')  native2unicode(hex2dec({'89' 'e3'}), 'unicode')  native2unicode(hex2dec({'56' '68'}), 'unicode') ' (ewfd)']);
model.sol('sol1').runAll;

%%  figure

model.result.dataset.create('rev1', 'Revolve2D');
model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').create('surf1', 'Surface');
%
%
% mphplot(model,'pg1');
% neff=mphglobal(model,'ewfd.neff');
% title(['effective index=',num2str(neff)]);

%lambda=1.5:0.01:1.6;
neff=ones(1,length(lambda));
for n=1:length(lambda)
    model.param.set('lam', sprintf('%d [um]',lambda(n)));
    model.study('std3').run;
    neff(n)=mphglobal(model,'ewfd.neff');
    %figure;
    %mphplot(model,'pg1');
    %title(['effective index=',num2str(neff(n))]);
end
figure;
scatter(lambda,real(neff),'LineWidth',1.5);
title([rb_instructor,'r=',num2str(r_ring),'width=',num2str(width),'h=',num2str(thickness)]);
save([rb_instructor,'_r=',num2str(r_ring),'_width=',num2str(width),'_h=',num2str(thickness),'.mat'],'lambda','neff');
out=neff;
end